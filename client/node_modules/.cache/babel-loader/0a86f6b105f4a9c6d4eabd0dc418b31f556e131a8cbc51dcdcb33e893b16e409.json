{"ast":null,"code":"var _jsxFileName = \"D:\\\\QueueBot\\\\client\\\\src\\\\components\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard({\n  usn\n}) {\n  _s();\n  const [shops] = useState([1, 2, 3, 4, 5]);\n  const [selectedShop, setSelectedShop] = useState(1);\n  const [queue, setQueue] = useState([]);\n  const [fileName, setFileName] = useState('');\n  const [estimatedTime, setEstimatedTime] = useState(0);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchQueue();\n  }, [selectedShop]);\n  const fetchQueue = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/queue/${selectedShop}`);\n      setQueue(res.data);\n\n      // Calculate total estimated time for pending jobs\n      const totalTime = res.data.filter(job => job.status === 'pending').reduce((acc, job) => acc + (job.estimated_time || 0), 0);\n      setEstimatedTime(totalTime);\n    } catch (err) {\n      setError('Failed to load queue.');\n      setQueue([]);\n      setEstimatedTime(0);\n    }\n  };\n  const submitPrintJob = async () => {\n    if (!fileName.trim()) {\n      alert('Please enter the file name');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/print/submit', {\n        filename: fileName.trim(),\n        usn: usn,\n        shop_number: selectedShop\n      });\n      if (response.status === 200) {\n        alert('Print job submitted successfully');\n        setFileName('');\n        fetchQueue();\n      } else {\n        alert('Failed to submit print job');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Failed to submit print job');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Stationery Shop:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedShop,\n        onChange: e => setSelectedShop(parseInt(e.target.value)),\n        children: shops.map(shop => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: shop,\n          children: [\"Shop \", shop]\n        }, shop, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Current Queue at Shop \", selectedShop]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"queue-list\",\n      children: [queue.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No jobs in queue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this), queue.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: job.status === 'done' ? 'done' : '',\n        children: [job.filename || job.file_name, \" \\u2014 Status: \", job.status, \" \\u2014 Est. Time: \", job.estimated_time || 0, \" mins\"]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Submit Print Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter file name (no upload)\",\n      value: fileName,\n      onChange: e => setFileName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitPrintJob,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Estimated time to print if submitted now: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [estimatedTime, \" mins\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"PYo0v7tyqFnYTM/uV5+vSFbz9Ds=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentDashboard","usn","_s","shops","selectedShop","setSelectedShop","queue","setQueue","fileName","setFileName","estimatedTime","setEstimatedTime","error","setError","fetchQueue","res","get","data","totalTime","filter","job","status","reduce","acc","estimated_time","err","submitPrintJob","trim","alert","response","post","filename","shop_number","console","className","children","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","map","shop","style","color","length","file_name","id","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/QueueBot/client/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction StudentDashboard({ usn }) {\r\n  const [shops] = useState([1, 2, 3, 4, 5]);\r\n  const [selectedShop, setSelectedShop] = useState(1);\r\n  const [queue, setQueue] = useState([]);\r\n  const [fileName, setFileName] = useState('');\r\n  const [estimatedTime, setEstimatedTime] = useState(0);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchQueue();\r\n  }, [selectedShop]);\r\n\r\n  const fetchQueue = async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/queue/${selectedShop}`);\r\n      setQueue(res.data);\r\n\r\n      // Calculate total estimated time for pending jobs\r\n      const totalTime = res.data\r\n        .filter(job => job.status === 'pending')\r\n        .reduce((acc, job) => acc + (job.estimated_time || 0), 0);\r\n      setEstimatedTime(totalTime);\r\n    } catch (err) {\r\n      setError('Failed to load queue.');\r\n      setQueue([]);\r\n      setEstimatedTime(0);\r\n    }\r\n  };\r\n\r\n  const submitPrintJob = async () => {\r\n    if (!fileName.trim()) {\r\n      alert('Please enter the file name');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/print/submit', {\r\n        filename: fileName.trim(),\r\n        usn: usn,\r\n        shop_number: selectedShop,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert('Print job submitted successfully');\r\n        setFileName('');\r\n        fetchQueue();\r\n      } else {\r\n        alert('Failed to submit print job');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Failed to submit print job');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Student Dashboard</h2>\r\n\r\n      <label>\r\n        Select Stationery Shop:\r\n        <select\r\n          value={selectedShop}\r\n          onChange={e => setSelectedShop(parseInt(e.target.value))}\r\n        >\r\n          {shops.map(shop => (\r\n            <option key={shop} value={shop}>\r\n              Shop {shop}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <h3>Current Queue at Shop {selectedShop}</h3>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul className=\"queue-list\">\r\n        {queue.length === 0 && <li>No jobs in queue.</li>}\r\n        {queue.map(job => (\r\n          <li key={job.id} className={job.status === 'done' ? 'done' : ''}>\r\n            {job.filename || job.file_name} — Status: {job.status} — Est. Time: {job.estimated_time || 0} mins\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Submit Print Job</h3>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter file name (no upload)\"\r\n        value={fileName}\r\n        onChange={e => setFileName(e.target.value)}\r\n      />\r\n      <button onClick={submitPrintJob}>Submit</button>\r\n\r\n      <p>\r\n        Estimated time to print if submitted now: <strong>{estimatedTime} mins</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}